#!/bin/bash
#
# @file configure Simple configuration script for building the SAS client
# library.
#
# Service Assurance Server client library
# Copyright (C) 2013  Metaswitch Networks Ltd
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version, along with the "Special Exception" for use of
# the program along with SSL, set forth below. This program is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details. You should have received a copy of the GNU General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
# The author can be reached by email at clearwater@metaswitch.com or by
# post at Metaswitch Networks Ltd, 100 Church St, Enfield EN2 6BQ, UK
#
# Special Exception
# Metaswitch Networks Ltd  grants you permission to copy, modify,
# propagate, and distribute a work formed by combining OpenSSL with The
# Software, or a work derivative of such a combination, even if such
# copying, modification, propagation, or distribution would otherwise
# violate the terms of the GPL. You must comply with the GPL in all
# respects for all of the code used other than OpenSSL.
# "OpenSSL" means OpenSSL toolkit software distributed by the OpenSSL
# Project and licensed under the OpenSSL Licenses, or a work based on such
# software and licensed under the OpenSSL Licenses.
# "OpenSSL Licenses" means the OpenSSL License and Original SSLeay License
# under which the OpenSSL Project distributes the OpenSSL toolkit software,
# as those licenses appear in the file LICENSE-OPENSSL.

# This script is a simple configure script.  It is hand written (rather than
# using autoconf, automake etc.) as it only need to check for the presence of a
# few header files.
#
# If this script gets significantly more compliated, consider migrating to
# autoconf.

CONFIG_FILE=include/config.h
HEADERS="atomic cstdatomic"

# Check whether a header file is present on the system by compiling a test
# program that includes it.
#
# Params:
#   $1 - The header file to check.
check_header_file()
{
  header=$1

  echo "#include <$header>" > test.cpp
  g++ -c test.cpp -std=c++0x >/dev/null 2>&1
  present=$?
  rm test.cpp

  printf "checking for $header... "
  if [[ $present -eq 0 ]]
  then
    echo "yes"
  else
    echo "no"
  fi

  return $present
}

# Write a #define to the config header file indicating whether a particular
# resource is present.
#
# Params:
#   $1 - The resource referred to.
#   $2 - Whether the resource is present (0 or 1)
write_hash_define()
{
  name=$(echo $1 | tr [a-z.] [A-Z_])
  flag=$2

  echo "#define HAVE_$name $flag" >> $CONFIG_FILE
}

# Clear out the config file.
: > $CONFIG_FILE

# Work out whether the header files we could use are present.
for header in $HEADERS
do
  if check_header_file $header
  then
    write_hash_define $header 1
  else
    write_hash_define $header 0
  fi
done

# Check zlib and write a suitable warning if not found
if check_header_file zlib.h
then
  write_hash_define zlib.h 1
else
  write_hash_define zlib.h 0
  echo "*** SAS COMPRESSION DISABLED! ***"
fi
